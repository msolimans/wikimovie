# haven't tried this but I believe it should work 
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: eksctl-test
  region: us-east-1
  version: "1.23"
vpc:
  id: vpc-id
  cidr: "10.197.192.0/20"
  subnets:
    public:
      us-east-1a:
        id: subnet-1
      us-east-1b:
        id: subnet-2
      us-east-1c:
        id: subnet-3
    private:
      us-east-1a:
        id: subnet-1
      us-east-1b:
        id: subnet-2
      us-east-1c:
        id: subnet-3
iam:
  withOIDC: true

addons:
  - name: vpc-cni
    version: latest
  - name: coredns
    version: latest
  - name: kube-proxy
    version: latest

nodeGroups:
  - name: eks-private-workers
    instanceType: t3.medium
    desiredCapacity: 1
    privateNetworking: true # if only 'Private' subnets are given, this must be enabled
    # ssh: # import public key from file
      # publicKeyPath: ~/.ssh/id_rsa_tests.pub 
      # generated by ssh-keygen -f eks-debug.pem -y | pbcopy
      # publicKey: "ssh-rsa <rsa_content>"
    labels:
      node-class: "private-node"
      # alpha.eksctl.io/cluster-name: eksctl-ekstest
      # alpha.eksctl.io/nodegroup-name: eks-public-workers
    iam: #generates iam policies
      withAddonPolicies:
        albIngress: true
        autoScaler: true
        cloudWatch: true